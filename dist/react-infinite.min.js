!function(t,e){"function"==typeof define&&define.amd?define(["react"],e):"object"==typeof exports?module.exports=e(require("react")):t.Infinite=e(t.React)}(this,function(t){var e=t.createClass({displayName:"Infinite",propTypes:{handleScroll:t.PropTypes.func,preloadBatchSize:t.PropTypes.number,preloadAdditionalHeight:t.PropTypes.number,elementHeight:t.PropTypes.number.isRequired,containerHeight:t.PropTypes.number.isRequired,infiniteLoadBeginBottomOffset:t.PropTypes.number,onInfiniteLoad:t.PropTypes.func,loadingSpinnerDelegate:t.PropTypes.node,isInfiniteLoading:t.PropTypes.bool,timeScrollStateLastsForAfterUserScrolls:t.PropTypes.number,className:t.PropTypes.string},getDefaultProps:function(){return{handleScroll:function(){},loadingSpinnerDelegate:t.DOM.div(null),onInfiniteLoad:function(){},isInfiniteLoading:!1,timeScrollStateLastsForAfterUserScrolls:150}},getInitialState:function(){var t=this.props.preloadBatchSize?this.props.preloadBatchSize:this.props.containerHeight/2,e=this.props.preloadAdditionalHeight?this.props.preloadAdditionalHeight:this.props.containerHeight,i=Math.min(this.props.children.length,Math.ceil((t+e)/this.props.elementHeight));return{numberOfChildren:this.props.children.length,scrollableHeight:void 0,displayIndexStart:0,displayIndexEnd:i,isInfiniteLoading:!1,currentScrollTop:void 0,previousScrollTop:void 0,preloadBatchSize:t,preloadAdditionalHeight:e,scrollTimeout:void 0,isScrolling:!1,extendedScrolledPast:!1,topItemIndex:0,selectedItem:0}},componentWillReceiveProps:function(t){var e=this,i={};void 0!==t.isInfiniteLoading&&(i.isInfiniteLoading=t.isInfiniteLoading);var o=t.preloadBatchSize;i.preloadBatchSize=o?o:t.containerHeight/2;var l=t.preloadAdditionalHeight;i.preloadAdditionalHeight=l?l:t.containerHeight;var s=t.selectedItem;i.selectedItem=s?s:0,this.props.selectedItem!==s?this.setState(i,function(){this.state.isScrolling||(e.setScrollTop(this.props.elementHeight*s),e.setStateFromScrollTop(this.props.elementHeight*s))}):this.setState(i,function(){e.setStateFromScrollTop(e.getScrollTop())})},componentDidUpdate:function(t){this.props.children.length!==t.children.length&&this.setStateFromScrollTop(this.getScrollTop())},componentWillMount:function(){if(1===t.Children.count(this.props.children))throw new Error("Infinite does not do anything with only one child.")},componentDidMount:function(){this.setState({scrollableHeight:this.refs.scrollable.getDOMNode().clientHeight,currentScrollTop:this.getScrollTop(),previousScrollTop:this.getScrollTop()})},computeTotalScrollableHeight:function(){return this.props.elementHeight*this.props.children.length+(this.state.extendedScrolledPast?0:this.props.extendedHeight)},setScrollTop:function(t){this.refs.scrollable.getDOMNode().scrollTop=t},getScrollTop:function(){return this.refs.scrollable.getDOMNode().scrollTop},isScrollingDown:function(){return this.state.previousScrollTop<this.state.currentScrollTop},setStateFromScrollTop:function(t){var e=Math.floor(t/this.state.preloadBatchSize),i=this.state.preloadBatchSize*e;this.props.extendedBlock<e&&(i-=this.props.extendedHeight);var o=i+this.state.preloadBatchSize,l=Math.max(0,i-this.state.preloadAdditionalHeight),s=Math.min(this.computeTotalScrollableHeight(),o+this.state.preloadAdditionalHeight),r=Math.floor(t/this.props.elementHeight),n=Math.floor(l/this.props.elementHeight),a=Math.ceil(s/this.props.elementHeight);this.state.topItemIndex!=r&&this.props.scrollNumberCallback&&this.props.scrollNumberCallback(r),this.setState({displayIndexStart:n,displayIndexEnd:a,currentScrollTop:t,previousScrollTop:this.state.currentScrollTop,extendedScrolledPast:this.props.extendedIndex<n,topItemIndex:r})},infiniteHandleScroll:function(t){this.props.handleScroll(this.refs.scrollable.getDOMNode()),this.handleScroll(t.target.scrollTop)},manageScrollTimeouts:function(){this.state.scrollTimeout&&clearTimeout(this.state.scrollTimeout);var t=this,e=setTimeout(function(){t.setState({isScrolling:!1,scrollTimeout:void 0})},this.props.timeScrollStateLastsForAfterUserScrolls);this.setState({isScrolling:!0,scrollTimeout:e})},handleScroll:function(t){this.manageScrollTimeouts(),this.setStateFromScrollTop(t);var e=t>this.computeTotalScrollableHeight()-this.props.containerHeight-this.props.infiniteLoadBeginBottomOffset;e&&!this.state.isInfiniteLoading&&(this.setState({isInfiniteLoading:!0}),this.props.onInfiniteLoad())},buildScrollableStyle:function(){return{height:this.props.containerHeight,overflowX:"hidden",overflowY:"scroll","-webkit-overflow-scrolling":"touch"}},buildHeightStyle:function(t){return{width:"100%",height:Math.ceil(t)+"px"}},render:function(){var e=this.state.displayIndexStart*this.props.elementHeight+(this.state.extendedScrolledPast?this.props.extendedHeight:0),i=(this.props.children.length-this.state.displayIndexEnd)*this.props.elementHeight,o=this.props.children.slice(this.state.displayIndexStart,this.state.displayIndexEnd),l={};return this.state.isScrolling&&(l.pointerEvents="none"),t.DOM.div({className:this.props.className?this.props.className:"",ref:"scrollable",style:this.buildScrollableStyle(),onScroll:this.infiniteHandleScroll},t.DOM.div({ref:"smoothScrollingWrapper",style:l},t.DOM.div({ref:"topSpacer",style:this.buildHeightStyle(e)}),o,t.DOM.div({ref:"bottomSpacer",style:this.buildHeightStyle(i)}),t.DOM.div({ref:"loadingSpinner"},this.state.isInfiniteLoading?this.props.loadingSpinnerDelegate:null)))}});return e});